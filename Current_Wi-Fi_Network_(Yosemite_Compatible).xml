<?xml version="1.0" encoding="UTF-8"?>
<extensionAttribute>
<displayName>Current Wi-Fi Network (Yosemite Compatible)</displayName>
<description>Reports the currently selected Wifi interface on an OS X computer.</description>
<dataType>string</dataType>
<scriptContentsMac>#!/bin/sh&#13;
&#13;
####################################################################################################&#13;
#&#13;
# Copyright (c) 2015, JAMF Software, LLC.  All rights reserved.&#13;
#&#13;
#       Redistribution and use in source and binary forms, with or without&#13;
#       modification, are permitted provided that the following conditions are met:&#13;
#               * Redistributions of source code must retain the above copyright&#13;
#                 notice, this list of conditions and the following disclaimer.&#13;
#               * Redistributions in binary form must reproduce the above copyright&#13;
#                 notice, this list of conditions and the following disclaimer in the&#13;
#                 documentation and/or other materials provided with the distribution.&#13;
#               * Neither the name of the JAMF Software, LLC nor the&#13;
#                 names of its contributors may be used to endorse or promote products&#13;
#                 derived from this software without specific prior written permission.&#13;
#&#13;
#       THIS SOFTWARE IS PROVIDED BY JAMF SOFTWARE, LLC "AS IS" AND ANY&#13;
#       EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED&#13;
#       WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE&#13;
#       DISCLAIMED. IN NO EVENT SHALL JAMF SOFTWARE, LLC BE LIABLE FOR ANY&#13;
#       DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#13;
#       (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;&#13;
#       LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND&#13;
#       ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT&#13;
#       (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#13;
#       SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#13;
#&#13;
####################################################################################################&#13;
#&#13;
# SUPPORT FOR THIS PROGRAM&#13;
#&#13;
#       This program is distributed "as is" by JAMF Software.&#13;
#&#13;
####################################################################################################&#13;
#&#13;
# ABOUT THIS EXTENSION ATTRIBUTE&#13;
#&#13;
# NAME&#13;
# CurrentWifiNetworkEA.sh -- Reports currently selected Wifi interface&#13;
#&#13;
# RESULT TYPE&#13;
# String&#13;
#&#13;
# DESCRIPTION&#13;
# This extension attribute script was designed to report the currently selected Wifi interface &#13;
# on an OS X computer.&#13;
#&#13;
# NOTES&#13;
# While the actual commands to parse and filter out the current Wifi interface from the results&#13;
# of using the networksetup command have not changed from the scripts previously posted on JAMF&#13;
# Nation, the versionCompare() function has been introduced to future-proof the comparison of OS X&#13;
# versions by doing an arithmetic comparison rather than a string comparison. This function should&#13;
# be re-usable in any bash scripts where this kind of comparison needs to be made.&#13;
# The determination of the Wi-Fi network has been updated to work correctly with OS X 10.7 and &#13;
# above (up to 10.10 at the time of writing). &#13;
#&#13;
####################################################################################################&#13;
#&#13;
# HISTORY&#13;
#&#13;
# Version: 1.0.1&#13;
#&#13;
# - Created by Justin Sako on February 11, 2015&#13;
# - Optimization of OS X version comparison by Justin Sako on February 12, 2015&#13;
# &#13;
####################################################################################################&#13;
#&#13;
# FUNCTIONS&#13;
#&#13;
####################################################################################################&#13;
&#13;
&#13;
function parameterMatchesRegexPattern ()&#13;
{&#13;
  local parameter=$1&#13;
  local pattern=$2&#13;
&#13;
  if [[ "$parameter" =~ $pattern ]]; then&#13;
    return 0&#13;
  else&#13;
    return 1&#13;
  fi&#13;
}&#13;
&#13;
function getCurrentWifiNetwork ()&#13;
{&#13;
  local osMinorVersion=`/usr/bin/sw_vers -productVersion | /usr/bin/cut -d . -f 2`&#13;
&#13;
  # Use the appropriate path for the networksetup command on the target OS version&#13;
&#13;
  if (( $osMinorVersion &lt; 5 )); then&#13;
    local networksetupPath="/System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Support/networksetup"&#13;
  else&#13;
    local networksetupPath="/usr/sbin/networksetup"&#13;
  fi&#13;
&#13;
  # Determine the current Wifi network&#13;
&#13;
  if [ ! -f $networksetupPath ]; then&#13;
    local result="The networksetup binary is not present on this machine."&#13;
  else&#13;
    if (( $osMinorVersion &lt; 6 )); then&#13;
      local result=`$networksetupPath -getairportnetwork | sed 's/Current AirPort Network: //g'`&#13;
    elif (( $osMinorVersion &lt; 7 )); then&#13;
      local result=`$networksetupPath -getairportnetwork AirPort | sed 's/Current AirPort Network: //g'`&#13;
    else&#13;
      local device=`$networksetupPath -listallhardwareports | grep -A 1 Wi-Fi | awk '/Device/{ print $2 }'`&#13;
      local result=`$networksetupPath -getairportnetwork $device | sed 's/Current Wi-Fi Network: //g'`&#13;
    fi&#13;
  fi&#13;
&#13;
  # Modify result to report shorter answers&#13;
&#13;
  if [[ `echo "$result" | grep "Error"` != "" ]]; then&#13;
    result="No Wi-Fi Device Found"&#13;
  elif parameterMatchesRegexPattern "$result" "(.*)Wi-Fi[[:space:]]power[[:space:]]is[[:space:]]currently[[:space:]]off(.*)"; then&#13;
    result="Wi-Fi Off"&#13;
  elif parameterMatchesRegexPattern "$result" "^You[[:space:]]are[[:space:]]not[[:space:]]associated(.*)"; then&#13;
    result="Not Associated"&#13;
  fi&#13;
&#13;
  echo $result&#13;
}&#13;
&#13;
&#13;
####################################################################################################&#13;
# MAIN&#13;
####################################################################################################&#13;
&#13;
activeInterface=$(getCurrentWifiNetwork)&#13;
&#13;
echo "&lt;result&gt;$activeInterface&lt;/result&gt;"&#13;
&#13;
&#13;
&#13;
&#13;
</scriptContentsMac>
<scriptContentsWindows/>
</extensionAttribute>
